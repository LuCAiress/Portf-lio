#include <GL/glut.h>
#include <stdlib.h>
#include <stdio.h>

float p1 = 49, p2 = 2, p3 = 52, p4 = 6;
int life = 3;

GLfloat r = 1.0, g = 0.5, b = 0.0, player_r = 1.0, player_g = 0.0, player_b = 0.0, lab_r = 1.0, lab_g = 1.0, lab_b = 1.0;

void display(){
    glClear(GL_COLOR_BUFFER_BIT);

    void drawBorder(){
        glColor3f(r, g, b);
        glBegin(GL_LINE_STRIP);
        glVertex2f(1, 1);
        glVertex2f(99, 1);
        glVertex2f(99, 120);
        glVertex2f(1, 120);
        glVertex2f(1, 1);
        glEnd();
    }


    void drawPlayer(){
        glBegin (GL_POLYGON);
        glColor3f(player_r, player_g, player_b);
        glVertex2f(p1, p2);
        glVertex2f(p3, p2);
        glVertex2f(p3, p4);
        glVertex2f(p1, p4);
        glEnd();
    }

    void drawLab(){
        glBegin (GL_LINES);
        glColor3f (lab_r, lab_g, lab_b);
        glVertex2f(1,10);
        glVertex2f(48, 10);
        
        glVertex2f(99,10);
        glVertex2f(52,10);

        glVertex2f(19,90);
        glVertex2f(99,90);

        glVertex2f(15,90);
        glVertex2f(1,90);
        //Limites
        glVertex2f(48, 10);
        glVertex2f(48, 20);

        glVertex2f(48,20);
        glVertex2f(22, 20);

        glVertex2f(22,20);
        glVertex2f(22, 15);

        glVertex2f(22,15);
        glVertex2f(4, 15);

        glVertex2f(4,15);
        glVertex2f(4,50);

        glVertex2f(4,50);
        glVertex2f(62,50);

        glVertex2f(62,50);
        glVertex2f(62,20);

        glVertex2f(62,20);
        glVertex2f(82,20);

        glVertex2f(82, 20);
        glVertex2f(82, 70);

        glVertex2f(82,70);
        glVertex2f(56,70);

        glVertex2f(56,70);
        glVertex2f(56,55);

        glVertex2f(56,55);
        glVertex2f(40,55);

        glVertex2f(40,55);
        glVertex2f(40,80);

        glVertex2f(40,80);
        glVertex2f(15,80);

        glVertex2f(15,80);
        glVertex2f(15,90);
        //FIm das primeiras paredes

        glVertex2f(52, 10);
        glVertex2f(52, 25);

        glVertex2f(52,25);
        glVertex2f(18, 25);

        glVertex2f(18,25);
        glVertex2f(18,20);

        glVertex2f(18,20);
        glVertex2f(8, 20);

        glVertex2f(8,20);
        glVertex2f(8,45);

        glVertex2f(8,45);
        glVertex2f(58,45);

        glVertex2f(58,45);
        glVertex2f(58,15);

        glVertex2f(58,15);
        glVertex2f(86,15);

        glVertex2f(86, 15);
        glVertex2f(86, 75);

        glVertex2f(86,75);
        glVertex2f(52,75);

        glVertex2f(52,75);
        glVertex2f(52,60);

        glVertex2f(52,60);
        glVertex2f(44,60);

        glVertex2f(44,60);
        glVertex2f(44,85);

        glVertex2f(44,85);
        glVertex2f(19,85);

        glVertex2f(19,85);
        glVertex2f(19,90);

        glEnd();

    }
    
    void drawFinish(){
        glBegin(GL_QUADS);
        glColor3f(0.0f,0.7f,0.2f);
        glVertex2f(15, 120);
        glVertex2f(19, 90);
        glVertex2f(19, 120);
        glVertex2f(15, 90);
        glEnd();
    }

    void drawLives(){
        if(life == 3){
            //desenha coração
            glBegin(GL_POLYGON);
            glColor3f(0.7f,0.0f,0.0f);
            glVertex2f(90 - 5,90 + 5);
            glVertex2f(87.5 - 5,92.5 + 5);
            glVertex2f(88.75 - 5,93.75 + 5);
            glVertex2f(90 - 5,92.5 + 5);
            glVertex2f(91.25 - 5,93.75 + 5);
            glVertex2f(92.5 - 5,92.5 + 5);
            glEnd();

            glBegin(GL_POLYGON);
            glColor3f(0.7f,0.0f,0.0f);
            glVertex2f(90, 90 + 5);
            glVertex2f(87.5, 92.5 + 5);
            glVertex2f(88.75, 93.75 + 5);
            glVertex2f(90, 92.5 + 5);
            glVertex2f(91.25, 93.75 + 5);
            glVertex2f(92.5, 92.5 + 5);
            glEnd();

            glBegin(GL_POLYGON);
            glColor3f(0.7f,0.0f,0.0f);
            glVertex2f(90 + 5,90 + 5);
            glVertex2f(87.5 + 5,92.5 + 5);
            glVertex2f(88.75 + 5,93.75 + 5);
            glVertex2f(90 + 5,92.5 + 5);
            glVertex2f(91.25 + 5,93.75 + 5);
            glVertex2f(92.5 + 5,92.5 + 5);
            glEnd();
        }
        if(life == 2){
            glBegin(GL_POLYGON);
            glColor3f(0.7f,0.0f,0.0f);
            glVertex2f(90, 90 + 5);
            glVertex2f(87.5, 92.5 + 5);
            glVertex2f(88.75, 93.75 + 5);
            glVertex2f(90, 92.5 + 5);
            glVertex2f(91.25, 93.75 + 5);
            glVertex2f(92.5, 92.5 + 5);
            glEnd();

            glBegin(GL_POLYGON);
            glColor3f(0.7f,0.0f,0.0f);
            glVertex2f(90 + 5,90 + 5);
            glVertex2f(87.5 + 5,92.5 + 5);
            glVertex2f(88.75 + 5,93.75 + 5);
            glVertex2f(90 + 5,92.5 + 5);
            glVertex2f(91.25 + 5,93.75 + 5);
            glVertex2f(92.5 + 5,92.5 + 5);
            glEnd();
        }
        if(life == 1){
            glBegin(GL_POLYGON);
            glColor3f(0.7f,0.0f,0.0f);
            glVertex2f(90 + 5,90 + 5);
            glVertex2f(87.5 + 5,92.5 + 5);
            glVertex2f(88.75 + 5,93.75 + 5);
            glVertex2f(90 + 5,92.5 + 5);
            glVertex2f(91.25 + 5,93.75 + 5);
            glVertex2f(92.5 + 5,92.5 + 5);
            glEnd();
        }
        if(life == 0){
            
        }
        if(life < 0){
            exit(0);
        }
    }

    drawLives();
    drawFinish();
    drawBorder();
    drawPlayer();
    drawLab();

    glFlush();
}

void timer(int value) {
	r = r + 0.01;
	g = g + 0.01;
	b = b + 0.01;
	if (r > 1) r = 0;
	if (g > 1) g = 0;
	if (b > 1) b = 0;
	glutPostRedisplay();
	glutTimerFunc(33, timer, 1);
}

void mouseMan(int button, int state, int x, int y){
    switch (button)
    {
    case GLUT_LEFT_BUTTON:
        player_r = player_r + 0.3;
        player_g = player_g + 0.2;
        player_b = player_b + 0.1;
        lab_r = lab_r + 0.3;
        lab_g = lab_g + 0.2;
        lab_b = lab_b + 0.1;
        if(player_r > 1) player_r = 0;
        if(player_g > 1) player_g = 0;
        if(player_b > 1) player_b = 0;
        if(lab_r > 1) lab_r = 0;
        if(lab_g > 1) lab_g = 0;
        if(lab_b > 1) lab_b = 0;
        break;
    
    case GLUT_RIGHT_BUTTON:
        player_r = player_r - 0.3;
        player_g = player_g - 0.2;
        player_b = player_b - 0.1;
        lab_r = lab_r - 0.3;
        lab_g = lab_g - 0.2;
        lab_b = lab_b - 0.1;
        if(player_r < 0) player_r = 1;
        if(player_g < 0) player_g = 1;
        if(player_b < 0) player_b = 1;
        if(lab_r < 0) lab_r = 1;
        if(lab_g < 0) lab_g = 1;
        if(lab_b < 0) lab_b = 1;
        break;

    case GLUT_MIDDLE_BUTTON:
        lab_r = 0.0;
        lab_g = 0.0;
        lab_b = 0.0;
    }
}
void keyboardMan(unsigned char key, int x, int y) {
    switch (key) {
        case 'w':
                p2 = p2 + 0.5;
                p4 = p4 + 0.5;
                if (
                ((p3 >= 1 && p3 <= 48 || p1 >= 1 && p1 <= 48) && (p4==10)) 
                || ((p3 >= 52 && p3 <= 99 || p1 >= 52 && p1 <= 99) && (p4==10))
                || ((p3 >= 4 && p3 <= 62 || p1 >= 4 && p1 <=62) && (p4==50))
                || ((p3 >= 62 && p3 <= 82 || p1 >= 62 && p1 <= 82) && (p4==20))
                || ((p3 >= 18 && p3 <= 52 || p1 >= 18 && p1 <= 52) && (p4==25))
                || ((p3 >= 8 && p3 <= 18 || p1 >= 8 && p1 <= 18) && (p4==20))
                || ((p3 >= 52 && p3 <= 86 || p1 >= 52 && p1 <= 86) && (p4==75))
                || ((p3 >= 44 && p3 <= 52 || p1 >= 44 && p1 <= 52) && (p4==60))
                || ((p3 >= 19 && p3 <= 44 || p1 >= 19 && p1 <= 44) && (p4==85))
                ) 
                {
                    p1 = 49;
                    p2 = 2;
                    p3 = 52;
                    p4 = 6;
                    life --;
                }
                if(
                    ((p3 >= 15 && p3 <= 19 || p1 >= 15 && p1 <= 19) && (p2>=91))
                )
                {
                    exit(0);
                    //GANHOU!!!
                }
            glutPostRedisplay();
            break;

        case 'a':
                p1 = p1 - 0.5;
                p3 = p3 - 0.5;
                if (
                ((p4 >= 10 && p4 <= 20 || p2 >= 10 && p2 <= 20) && (p1==48))
                || ((p4 >= 15 && p4 <= 50 || p2 >= 15 && p2 <= 50) && (p1==4))
                || ((p4 >= 20 && p4 <= 70 || p2 >= 20 && p2 <= 70) && (p1==82))
                || ((p4 >= 55 && p4 <= 80 || p2 >= 55 && p2 <= 80) && (p1==40))
                || ((p4 >= 80 && p4 <= 90 || p2 >= 80 && p2 <= 90) && (p1==15))
                || ((p4 >= 20 && p4 <= 25 || p2 >= 20 && p4 <= 25) && (p1==18))
                || ((p4 >= 15 && p4 <= 45 || p2 >= 15 && p2 <= 45) && (p1==58))
                || ((p4 >= 60 && p4 <= 75 || p2 >= 60 && p2 <= 75) && (p1==52))
                || (p1 == 1)
                )
                {
                    p1 = 49;
                    p2 = 2;
                    p3 = 52;
                    p4 = 6;
                    life --;
                }
            
            
            glutPostRedisplay();
            break;

        case 's':
                p2 = p2 - 0.5;
                p4 = p4 - 0.5;
                if (
                ((p3 >= 22 && p3 <= 48 || p1 >= 22 && p1 <= 48) && (p2==20))
                || ((p3 >= 4 && p3 <= 22 || p1 >= 4 && p1 <= 22) && (p2==15))
                || ((p3 >= 56 && p3 <= 82 || p1 >= 56 && p1 <= 82) && (p2==70))
                || ((p3 >= 40 && p3 <= 56 || p1 >= 40 && p1 <= 56) && (p2==55))
                || ((p3 >= 15 && p3 <= 40 || p1 >= 15 && p1 <= 40) && (p2==80))
                || ((p3 >= 8 && p3 <= 58 || p1 >= 8 && p1 <= 58) && (p2==45))
                || ((p3 >= 58 && p3 <= 86 || p1 >= 58 && p1 <= 86) && (p2==15))
                || (p2 == 1)
                )
                {
                    p1 = 49;
                    p2 = 2;
                    p3 = 52;
                    p4 = 6;      
                    life --; 
                }

            glutPostRedisplay();
            break;

        case 'd':
                p1 = p1 + 0.5;
                p3 = p3 + 0.5;
                if (
                ((p4 >= 15 && p4 <= 20 || p2 >= 15 && p2 <= 20) && (p3==22))
                || ((p4 >= 20 && p4 <= 50 || p2 >= 20 && p2 <= 50) && (p3==62))
                || ((p4 >= 55 && p4 <= 70 || p2 >= 55 && p2 <= 70) && (p3==56))
                || ((p4 >= 10 && p4 <= 25 || p2 >= 10 && p2 <= 25) && (p3==52))
                || ((p4 >= 20 && p4 <= 45 || p2 >= 20 && p4 <= 45) && (p3==8))
                || ((p4 >= 60 && p4 <= 85 || p2 >= 60 && p2 <= 85) && (p3==44))
                || ((p4 >= 85 && p4 <= 90 || p2 >= 85 && p2 <= 90) && (p3==19))
                || (p3 == 99)
                )
                {
                    p1 = 49;
                    p2 = 2;
                    p3 = 52;
                    p4 = 6;
                    life --;
                }

            glutPostRedisplay();
            break;
    }
}


void main(int argc, char** argv){
    glutInit(&argc, argv);
    glutInitWindowSize(800, 600);
    glutInitWindowPosition(100, 100);
    glutCreateWindow(argv[0]) ;
    glutTimerFunc(33, timer, 1);
	glClearColor(1.0, 1.0, 1.0, 0.0);
    glOrtho(0, 100, 0, 100, -1, 1);
    glutDisplayFunc(display);
    glClearColor(0.0f, 0.0f, 0.0f, 1.0f);
    glutKeyboardFunc(keyboardMan);
    glutMouseFunc(mouseMan);
    glutMainLoop();   
}
